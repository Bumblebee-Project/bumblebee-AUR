#!/bin/bash
# Bumblebee daemon handler script. Distro-independent script to start/stop
# daemon. Should be runnable in any distro but won't give any feedback.

. /etc/rc.d/functions
. /etc/rc.conf

NAME=bumblebeed
BIN='/usr/bin/bumblebeed'
PIDFILE=/var/run/$NAME.pid

# returns 0 if running, non-zero otherwise
status() {
	local pid
	# program is not running
	[ -s "$PIDFILE" ] || return 3

	pid="$(cat "$PIDFILE" 2>/dev/null)"

	# process is not running, pid file not properly cleared
	kill -0 "$pid" 2>/dev/null || return 1

	# process is running
	return 0
}

start() {
	# program is not installed
	[ -x "$BIN" ] || return 5

	# return if already started
	status && return 0 || true
	"$BIN" --daemon 2>/dev/null
	status && return 0 || return 1
}

stop() {
	local retries=10
	local pid="$(cat "$PIDFILE" 2>/dev/null)"

	# not running, we're done
	status || return 0

	# first ask the daemon nicely to quit
	kill "$pid" || true
	# and check whether it listened
	while [ $retries -gt 0 ]; do
		retries=$((retries - 1))

		# process has gone, return success
		status || return 0
		# wait for half a minut before polling again
		sleep .5
	done
	# failed to stop or timeout
	return 1
}

restart() {
	stop && start
}

case "$1" in
  start)
	stat_busy "Starting Bumblebee"
    if start; then
        stat_done
        add_daemon $NAME
    else
        stat_fail
    fi
	;;
  stop)
	stat_busy "Stopping Bumblebee"
    if stop; then
        stat_done
        rm_daemon $NAME
    else
        stat_fail
    fi
	;;
  restart)
    stat_busy "Stopping Bumblebee"
    if stop; then
        stat_done
        rm_daemon $NAME
    else
        stat_fail
    fi
    sleep 1
    stat_busy "Starting Bumblebee"
    if start; then
        stat_done
        add_daemon $NAME
    else
        stat_fail
    fi
    ;;
  *)
	echo "Usage: $0 {start|stop|restart|status}"
	exit 1
	;;
esac
